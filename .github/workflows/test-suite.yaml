name: Test with PyTest, coverage with Coveralls

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - edited
      - reopened
    branches:
      - dev
    paths:
      - '**.py'
      
defaults:
  run:
    shell: bash
jobs:
  test_suite:
    name: Run test suite steps
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    environment: testing
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install dependencies
        run: poetry install --no-interaction --with testing
      - name: Run PyTest with coverage
        env:
          DEBUG: True
        run: |
          source $VENV
          pytest --cov --cov-report=lcov:cov.lcov --cov=startout
      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2.2.3
        with:
          file: cov.lcov
          parallel: true
          flag-name: run-${{ matrix.os }}-${{ matrix.python-version }}

  finish:
    needs: test_suite
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Close parallel build
        uses: coverallsapp/github-action@v2.2.3
        with:
          parallel-finished: true
